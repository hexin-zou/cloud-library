{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from \"@/router\";\nimport Cookies from 'js-cookie';\nconst request = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}); // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  const adminJson = Cookies.get('admin');\n\n  if (adminJson) {\n    // 设置请求头\n    config.headers['token'] = JSON.parse(adminJson).token;\n  }\n\n  config.header('Access-Control-Allow-Origin', '*'); // 允许所有源\n\n  config.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  config.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(response => {\n  let res = response.data; // 兼容服务端返回的字符串数据\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n\n  if (res.code === '401') {\n    router.push('/login');\n  }\n\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","Cookies","request","create","baseURL","timeout","headers","interceptors","use","config","adminJson","get","JSON","parse","token","header","error","Promise","reject","response","res","data","code","push","console","log"],"sources":["D:/project/cloud-library/vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\nimport Cookies from 'js-cookie'\n\nconst request = axios.create({\n    baseURL: 'http://localhost:8080/api', timeout: 5000, headers: {\n        'Content-Type': 'application/json'\n    }\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    const adminJson = Cookies.get('admin')\n    if (adminJson) {\n        // 设置请求头\n        config.headers['token'] = JSON.parse(adminJson).token\n    }\n    config.header('Access-Control-Allow-Origin', '*');  // 允许所有源\n    config.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n    config.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(response => {\n    let res = response.data;\n    // 兼容服务端返回的字符串数据\n    if (typeof res === 'string') {\n        res = res ? JSON.parse(res) : res\n    }\n    if (res.code === '401') {\n        router.push('/login')\n    }\n    return res;\n}, error => {\n    console.log('err' + error) // for debug\n    return Promise.reject(error)\n})\n\n\nexport default request"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;EACzBC,OAAO,EAAE,2BADgB;EACaC,OAAO,EAAE,IADtB;EAC4BC,OAAO,EAAE;IAC1D,gBAAgB;EAD0C;AADrC,CAAb,CAAhB,C,CAMA;AACA;AACA;;AACAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiCC,MAAM,IAAI;EACvCA,MAAM,CAACH,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EAEA,MAAMI,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAlB;;EACA,IAAID,SAAJ,EAAe;IACX;IACAD,MAAM,CAACH,OAAP,CAAe,OAAf,IAA0BM,IAAI,CAACC,KAAL,CAAWH,SAAX,EAAsBI,KAAhD;EACH;;EACDL,MAAM,CAACM,MAAP,CAAc,6BAAd,EAA6C,GAA7C,EARuC,CAQa;;EACpDN,MAAM,CAACM,MAAP,CAAc,8BAAd,EAA8C,iCAA9C;EACAN,MAAM,CAACM,MAAP,CAAc,8BAAd,EAA8C,6BAA9C;EACA,OAAON,MAAP;AACH,CAZD,EAYGO,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAdD,E,CAgBA;AACA;;AACAd,OAAO,CAACK,YAAR,CAAqBY,QAArB,CAA8BX,GAA9B,CAAkCW,QAAQ,IAAI;EAC1C,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CAD0C,CAE1C;;EACA,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;IACzBA,GAAG,GAAGA,GAAG,GAAGR,IAAI,CAACC,KAAL,CAAWO,GAAX,CAAH,GAAqBA,GAA9B;EACH;;EACD,IAAIA,GAAG,CAACE,IAAJ,KAAa,KAAjB,EAAwB;IACpBtB,MAAM,CAACuB,IAAP,CAAY,QAAZ;EACH;;EACD,OAAOH,GAAP;AACH,CAVD,EAUGJ,KAAK,IAAI;EACRQ,OAAO,CAACC,GAAR,CAAY,QAAQT,KAApB,EADQ,CACmB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAbD;AAgBA,eAAed,OAAf"},"metadata":{},"sourceType":"module"}