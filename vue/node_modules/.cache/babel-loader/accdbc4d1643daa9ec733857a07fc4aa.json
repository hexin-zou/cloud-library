{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from \"@/router\";\nimport Cookies from 'js-cookie';\nconst request = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}); // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  const adminJson = Cookies.get('admin');\n\n  if (adminJson) {\n    // 设置请求头\n    config.headers['token'] = JSON.parse(adminJson).token;\n  }\n\n  router.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*'); // 允许所有源\n\n    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  }, err => {\n    console.log(err);\n  });\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(response => {\n  let res = response.data; // 兼容服务端返回的字符串数据\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n\n  if (res.code === '401') {\n    router.push('/login');\n  }\n\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","Cookies","request","create","baseURL","timeout","headers","interceptors","use","config","adminJson","get","JSON","parse","token","req","res","next","header","err","console","log","error","Promise","reject","response","data","code","push"],"sources":["D:/project/cloud-library/vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\nimport Cookies from 'js-cookie'\n\nconst request = axios.create({\n    baseURL: 'http://localhost:8080/api',\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    const adminJson = Cookies.get('admin')\n    if (adminJson) {\n        // 设置请求头\n        config.headers['token'] = JSON.parse(adminJson).token\n    }\n    router.use((req, res, next) => {\n        res.header('Access-Control-Allow-Origin', '*');  // 允许所有源\n        res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n        res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    }, (err) => {\n        console.log(err)\n    })\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        if (res.code === '401') {\n            router.push('/login')\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;EACzBC,OAAO,EAAE,2BADgB;EAEzBC,OAAO,EAAE,IAFgB;EAGzBC,OAAO,EAAE;IACL,gBAAgB;EADX;AAHgB,CAAb,CAAhB,C,CAQA;AACA;AACA;;AACAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiCC,MAAM,IAAI;EACvCA,MAAM,CAACH,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EAEA,MAAMI,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAlB;;EACA,IAAID,SAAJ,EAAe;IACX;IACAD,MAAM,CAACH,OAAP,CAAe,OAAf,IAA0BM,IAAI,CAACC,KAAL,CAAWH,SAAX,EAAsBI,KAAhD;EACH;;EACDd,MAAM,CAACQ,GAAP,CAAW,CAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;IAC3BD,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C,EAD2B,CACsB;;IACjDF,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;IACAF,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;EACH,CAJD,EAIIC,GAAD,IAAS;IACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACH,CAND;EAOA,OAAOV,MAAP;AACH,CAhBD,EAgBGa,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAlBD,E,CAoBA;AACA;;AACApB,OAAO,CAACK,YAAR,CAAqBkB,QAArB,CAA8BjB,GAA9B,CACIiB,QAAQ,IAAI;EACR,IAAIT,GAAG,GAAGS,QAAQ,CAACC,IAAnB,CADQ,CAER;;EACA,IAAI,OAAOV,GAAP,KAAe,QAAnB,EAA6B;IACzBA,GAAG,GAAGA,GAAG,GAAGJ,IAAI,CAACC,KAAL,CAAWG,GAAX,CAAH,GAAqBA,GAA9B;EACH;;EACD,IAAIA,GAAG,CAACW,IAAJ,KAAa,KAAjB,EAAwB;IACpB3B,MAAM,CAAC4B,IAAP,CAAY,QAAZ;EACH;;EACD,OAAOZ,GAAP;AACH,CAXL,EAYIM,KAAK,IAAI;EACLF,OAAO,CAACC,GAAR,CAAY,QAAQC,KAApB,EADK,CACsB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfL;AAmBA,eAAepB,OAAf"},"metadata":{},"sourceType":"module"}